{"version":3,"file":"aar.js","names":["defaultOptions","androidPath","androidBundleName","reverseJetify","createGradleFile","file","fs","createFile","writeFile","build","root","output","options","report","targetOptions","info","kleur","blue","path","relative","del","androidAssemble","mkdir","sourceAar","join","targetAar","copyFile","gradleFile","supportOutputPath","supportAar","jetifier","input","reverse","supportGradleFile","success"],"sources":["../../src/targets/aar.ts"],"sourcesContent":["import path from 'path';\nimport kleur from 'kleur';\nimport fs from 'fs-extra';\nimport del from 'del';\nimport androidAssemble from '../utils/androidAssemble';\nimport jetifier from '../utils/jetifier';\nimport type { Input } from '../types';\n\ntype TargetOptions = {\n  androidPath: string;\n  androidBundleName: string;\n  reverseJetify: boolean;\n};\n\nconst defaultOptions: TargetOptions = {\n  androidPath: 'android',\n  androidBundleName: 'android.aar',\n  reverseJetify: false,\n};\n\ntype Options = Input & {\n  options?: Partial<TargetOptions>;\n};\n\nasync function createGradleFile(file: string) {\n  await fs.createFile(file);\n  await fs.writeFile(\n    file,\n    'configurations.maybeCreate(\"default\")\\nartifacts.add(\"default\", file(\\'android.aar\\'))'\n  );\n}\n\nexport default async function build({\n  root,\n  output,\n  options,\n  report,\n}: Options) {\n  const targetOptions = {\n    ...defaultOptions,\n    ...options,\n  };\n\n  report.info(\n    `Cleaning up previous build at ${kleur.blue(path.relative(root, output))}`\n  );\n\n  await del([output]);\n\n  await androidAssemble({\n    root,\n    androidPath: targetOptions.androidPath,\n    report,\n  });\n\n  report.info(\n    `Creating new output directory at ${kleur.blue(\n      path.relative(root, output)\n    )}`\n  );\n  await fs.mkdir(output);\n\n  const sourceAar = path.join(\n    targetOptions.androidPath,\n    'build',\n    'outputs',\n    'aar',\n    targetOptions.androidBundleName\n  );\n  const targetAar = path.join(output, targetOptions.androidBundleName);\n\n  report.info(\n    `Copying AAR from ${kleur.blue(\n      path.relative(root, sourceAar)\n    )} to ${kleur.blue(path.relative(root, targetAar))}`\n  );\n  await fs.copyFile(sourceAar, targetAar);\n\n  const gradleFile = path.join(output, 'build.gradle');\n  report.info(\n    `Creating AAR Gradle file at ${kleur.blue(path.relative(root, gradleFile))}`\n  );\n  await createGradleFile(gradleFile);\n\n  if (targetOptions.reverseJetify) {\n    const supportOutputPath = path.join(output, 'support');\n    report.info(\n      `Creating new support output directory at ${kleur.blue(\n        path.relative(root, supportOutputPath)\n      )}`\n    );\n    await fs.mkdir(supportOutputPath);\n\n    const supportAar = path.join(\n      supportOutputPath,\n      targetOptions.androidBundleName\n    );\n    report.info(\n      `Using Jetifier to convert AAR from AndroidX to Support AAR at ${kleur.blue(\n        path.relative(root, supportAar)\n      )}`\n    );\n\n    await jetifier({\n      root,\n      report,\n      input: targetAar,\n      output: supportAar,\n      reverse: true,\n    });\n\n    const supportGradleFile = path.join(supportOutputPath, 'build.gradle');\n    report.info(\n      `Creating Support AAR Gradle file at ${kleur.blue(\n        path.relative(root, supportGradleFile)\n      )}`\n    );\n    await createGradleFile(supportGradleFile);\n  }\n\n  report.success(`Wrote files to ${kleur.blue(path.relative(root, output))}`);\n}\n"],"mappings":"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"}