{"version":3,"file":"compile.js","names":["compile","root","source","output","babelrc","configFile","modules","copyFlow","sourceMaps","report","files","glob","sync","cwd","absolute","nodir","ignore","info","kleur","blue","String","length","path","relative","Promise","all","map","filepath","outputFilename","join","replace","fs","mkdirp","dirname","test","copy","content","readFile","result","babel","transformAsync","sourceRoot","sourceFileName","filename","presets","require","resolve","targets","browserslist","findConfig","browsers","node","useBuiltIns","Error","code","mapFilename","basename","sourcesContent","undefined","writeFileSync","JSON","stringify","writeFile","success"],"sources":["../../src/utils/compile.ts"],"sourcesContent":["import path from 'path';\nimport fs from 'fs-extra';\nimport kleur from 'kleur';\nimport * as babel from '@babel/core';\nimport browserslist from 'browserslist';\nimport glob from 'glob';\nimport type { Input } from '../types';\n\ntype Options = Input & {\n  babelrc?: boolean | null;\n  configFile?: string | false | null;\n  sourceMaps?: boolean;\n  copyFlow?: boolean;\n  modules: 'commonjs' | false;\n};\n\nexport default async function compile({\n  root,\n  source,\n  output,\n  babelrc = false,\n  configFile = false,\n  modules,\n  copyFlow,\n  sourceMaps = true,\n  report,\n}: Options) {\n  const files = glob.sync('**/*', {\n    cwd: source,\n    absolute: true,\n    nodir: true,\n    ignore: '**/{__tests__,__fixtures__,__mocks__}/**',\n  });\n\n  report.info(\n    `Compiling ${kleur.blue(String(files.length))} files in ${kleur.blue(\n      path.relative(root, source)\n    )} with ${kleur.blue('babel')}`\n  );\n\n  await Promise.all(\n    files.map(async (filepath) => {\n      const outputFilename = path\n        .join(output, path.relative(source, filepath))\n        .replace(/\\.(jsx?|tsx?)$/, '.js');\n\n      await fs.mkdirp(path.dirname(outputFilename));\n\n      if (!/\\.(jsx?|tsx?)$/.test(filepath)) {\n        // Copy files which aren't source code\n        fs.copy(filepath, outputFilename);\n        return;\n      }\n\n      const content = await fs.readFile(filepath, 'utf-8');\n      const result = await babel.transformAsync(content, {\n        cwd: root,\n        babelrc: babelrc,\n        configFile: configFile,\n        sourceMaps,\n        sourceRoot: path.relative(path.dirname(outputFilename), source),\n        sourceFileName: path.relative(source, filepath),\n        filename: filepath,\n        ...(babelrc || configFile\n          ? null\n          : {\n              presets: [\n                [\n                  require.resolve('@babel/preset-env'),\n                  {\n                    targets: browserslist.findConfig(root) ?? {\n                      browsers: [\n                        '>1%',\n                        'last 2 chrome versions',\n                        'last 2 edge versions',\n                        'last 2 firefox versions',\n                        'last 2 safari versions',\n                        'not dead',\n                        'not ie <= 11',\n                        'not op_mini all',\n                        'not android <= 4.4',\n                        'not samsung <= 4',\n                      ],\n                      node: '16',\n                    },\n                    useBuiltIns: false,\n                    modules,\n                  },\n                ],\n                require.resolve('@babel/preset-react'),\n                require.resolve('@babel/preset-typescript'),\n                require.resolve('@babel/preset-flow'),\n              ],\n            }),\n      });\n\n      if (result == null) {\n        throw new Error('Output code was null');\n      }\n\n      let code = result.code;\n\n      if (sourceMaps && result.map) {\n        const mapFilename = outputFilename + '.map';\n\n        code += '\\n//# sourceMappingURL=' + path.basename(mapFilename);\n\n        // Don't inline the source code, it can be retrieved from the source file\n        result.map.sourcesContent = undefined;\n\n        fs.writeFileSync(mapFilename, JSON.stringify(result.map));\n      }\n\n      await fs.writeFile(outputFilename, code);\n\n      if (copyFlow) {\n        fs.copy(filepath, outputFilename + '.flow');\n      }\n    })\n  );\n\n  report.success(`Wrote files to ${kleur.blue(path.relative(root, output))}`);\n}\n"],"mappings":"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"}